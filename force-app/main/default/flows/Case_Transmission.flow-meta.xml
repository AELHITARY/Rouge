<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Define_Delay_7_days</name>
        <label>Define Delay = 7 days</label>
        <locationX>314</locationX>
        <locationY>398</locationY>
        <assignmentItems>
            <assignToReference>DelaiValidation</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>7.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Transmission_de_la_requ_te</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Define_Delay_Provider_Delay</name>
        <label>Define Delay = Provider Delay</label>
        <locationX>50</locationX>
        <locationY>398</locationY>
        <assignmentItems>
            <assignToReference>DelaiValidation</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case.provider__r.PNCValidationDelay__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Transmission_de_la_requ_te</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Provider_Delay</name>
        <label>Check Provider Delay</label>
        <locationX>182</locationX>
        <locationY>278</locationY>
        <defaultConnector>
            <targetReference>Define_Delay_7_days</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Delay</defaultConnectorLabel>
        <rules>
            <name>Has_Delay</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case.provider__r.PNCValidationDelay__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Define_Delay_Provider_Delay</targetReference>
            </connector>
            <label>Has Delay</label>
        </rules>
    </decisions>
    <description>Case - NCP Fournisseur - Remplissage des date et moyen de transmission + envoie d&apos;email au fournisseur</description>
    <formulas>
        <name>DateValidation</name>
        <dataType>Date</dataType>
        <expression>{!$Flow.CurrentDate} + {!DelaiValidation}</expression>
    </formulas>
    <formulas>
        <name>todayPlusPNCValidationDelay</name>
        <dataType>Date</dataType>
        <expression>{!$Flow.CurrentDate} + {!Get_Case.provider__r.PNCValidationDelay__c}</expression>
    </formulas>
    <interviewLabel>Case - Transmission {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case (PNC) - Transmission fournisseur</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>182</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Provider_Delay</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>182</locationX>
        <locationY>734</locationY>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>automaticValidationDate__c</field>
            <value>
                <elementReference>automatiqueValidationDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>transmissionChannel__c</field>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>transmissionDate__c</field>
            <value>
                <elementReference>Date_de_transmission</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>transmissionFlow__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <screens>
        <name>Error</name>
        <label>Error</label>
        <locationX>578</locationX>
        <locationY>854</locationY>
        <allowBack>true</allowBack>
        <allowFinish>false</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>errorMessage</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 12px; color: rgb(255, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;{!$Flow.FaultMessage}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Transmission_de_la_requ_te</name>
        <label>Transmission de la requête</label>
        <locationX>182</locationX>
        <locationY>614</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
        <fields>
            <name>Date_de_transmission</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>$Flow.CurrentDate</elementReference>
            </defaultValue>
            <fieldText>Date de transmission</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;La date de transmission doit être inférieure ou égale à aujourd&apos;hui.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!Date_de_transmission} &lt;= {!$Flow.CurrentDate}</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>automatiqueValidationDate</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>DateValidation</elementReference>
            </defaultValue>
            <fieldText>Date de validation automatique</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Date de validation automatique invalide (doit être supérieure à la date du jour et ne doit pas dépasser le délai du fournisseur).&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>IF(
ISBLANK( {!Get_Case.provider__r.PNCValidationDelay__c} ),
{!automatiqueValidationDate} &gt; {!$Flow.CurrentDate},
{!automatiqueValidationDate} &gt; {!$Flow.CurrentDate} &amp;&amp; {!automatiqueValidationDate} &lt;= {!todayPlusPNCValidationDelay}
)</formulaExpression>
            </validationRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>DelaiValidation</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
